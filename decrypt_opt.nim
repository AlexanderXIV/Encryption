const save_box: array[256, uint8] = [
  0x63'u8, 0x7C'u8, 0x77'u8, 0x7B'u8, 0xF2'u8, 0x6B'u8, 0x6F'u8, 0xC5'u8, 0x30'u8, 0x01'u8, 0x67'u8, 0x2B'u8, 0xFE'u8, 0xD7'u8, 0xAB'u8, 0x76'u8,
  0xCA'u8, 0x82'u8, 0xC9'u8, 0x7D'u8, 0xFA'u8, 0x59'u8, 0x47'u8, 0xF0'u8, 0xAD'u8, 0xD4'u8, 0xA2'u8, 0xAF'u8, 0x9C'u8, 0xA4'u8, 0x72'u8, 0xC0'u8,
  0xB7'u8, 0xFD'u8, 0x93'u8, 0x26'u8, 0x36'u8, 0x3F'u8, 0xF7'u8, 0xCC'u8, 0x34'u8, 0xA5'u8, 0xE5'u8, 0xF1'u8, 0x71'u8, 0xD8'u8, 0x31'u8, 0x15'u8,
  0x04'u8, 0xC7'u8, 0x23'u8, 0xC3'u8, 0x18'u8, 0x96'u8, 0x05'u8, 0x9A'u8, 0x07'u8, 0x12'u8, 0x80'u8, 0xE2'u8, 0xEB'u8, 0x27'u8, 0xB2'u8, 0x75'u8,
  0x09'u8, 0x83'u8, 0x2C'u8, 0x1A'u8, 0x1B'u8, 0x6E'u8, 0x5A'u8, 0xA0'u8, 0x52'u8, 0x3B'u8, 0xD6'u8, 0xB3'u8, 0x29'u8, 0xE3'u8, 0x2F'u8, 0x84'u8,
  0x53'u8, 0xD1'u8, 0x00'u8, 0xED'u8, 0x20'u8, 0xFC'u8, 0xB1'u8, 0x5B'u8, 0x6A'u8, 0xCB'u8, 0xBE'u8, 0x39'u8, 0x4A'u8, 0x4C'u8, 0x58'u8, 0xCF'u8,
  0xD0'u8, 0xEF'u8, 0xAA'u8, 0xFB'u8, 0x43'u8, 0x4D'u8, 0x33'u8, 0x85'u8, 0x45'u8, 0xF9'u8, 0x02'u8, 0x7F'u8, 0x50'u8, 0x3C'u8, 0x9F'u8, 0xA8'u8,
  0x51'u8, 0xA3'u8, 0x40'u8, 0x8F'u8, 0x92'u8, 0x9D'u8, 0x38'u8, 0xF5'u8, 0xBC'u8, 0xB6'u8, 0xDA'u8, 0x21'u8, 0x10'u8, 0xFF'u8, 0xF3'u8, 0xD2'u8,
  0xCD'u8, 0x0C'u8, 0x13'u8, 0xEC'u8, 0x5F'u8, 0x97'u8, 0x44'u8, 0x17'u8, 0xC4'u8, 0xA7'u8, 0x7E'u8, 0x3D'u8, 0x64'u8, 0x5D'u8, 0x19'u8, 0x73'u8,
  0x60'u8, 0x81'u8, 0x4F'u8, 0xDC'u8, 0x22'u8, 0x2A'u8, 0x90'u8, 0x88'u8, 0x46'u8, 0xEE'u8, 0xB8'u8, 0x14'u8, 0xDE'u8, 0x5E'u8, 0x0B'u8, 0xDB'u8,
  0xE0'u8, 0x32'u8, 0x3A'u8, 0x0A'u8, 0x49'u8, 0x06'u8, 0x24'u8, 0x5C'u8, 0xC2'u8, 0xD3'u8, 0xAC'u8, 0x62'u8, 0x91'u8, 0x95'u8, 0xE4'u8, 0x79'u8,
  0xE7'u8, 0xC8'u8, 0x37'u8, 0x6D'u8, 0x8D'u8, 0xD5'u8, 0x4E'u8, 0xA9'u8, 0x6C'u8, 0x56'u8, 0xF4'u8, 0xEA'u8, 0x65'u8, 0x7A'u8, 0xAE'u8, 0x08'u8,
  0xBA'u8, 0x78'u8, 0x25'u8, 0x2E'u8, 0x1C'u8, 0xA6'u8, 0xB4'u8, 0xC6'u8, 0xE8'u8, 0xDD'u8, 0x74'u8, 0x1F'u8, 0x4B'u8, 0xBD'u8, 0x8B'u8, 0x8A'u8,
  0x70'u8, 0x3E'u8, 0xB5'u8, 0x66'u8, 0x48'u8, 0x03'u8, 0xF6'u8, 0x0E'u8, 0x61'u8, 0x35'u8, 0x57'u8, 0xB9'u8, 0x86'u8, 0xC1'u8, 0x1D'u8, 0x9E'u8,
  0xE1'u8, 0xF8'u8, 0x98'u8, 0x11'u8, 0x69'u8, 0xD9'u8, 0x8E'u8, 0x94'u8, 0x9B'u8, 0x1E'u8, 0x87'u8, 0xE9'u8, 0xCE'u8, 0x55'u8, 0x28'u8, 0xDF'u8,
  0x8C'u8, 0xA1'u8, 0x89'u8, 0x0D'u8, 0xBF'u8, 0xE6'u8, 0x42'u8, 0x68'u8, 0x41'u8, 0x99'u8, 0x2D'u8, 0x0F'u8, 0xB0'u8, 0x54'u8, 0xBB'u8, 0x16'u8 ]

const inv_save_box: array[256, uint8] = [
  0x52'u8, 0x09'u8, 0x6a'u8, 0xd5'u8, 0x30'u8, 0x36'u8, 0xa5'u8, 0x38'u8, 0xbf'u8, 0x40'u8, 0xa3'u8, 0x9e'u8, 0x81'u8, 0xf3'u8, 0xd7'u8, 0xfb'u8,
  0x7c'u8, 0xe3'u8, 0x39'u8, 0x82'u8, 0x9b'u8, 0x2f'u8, 0xff'u8, 0x87'u8, 0x34'u8, 0x8e'u8, 0x43'u8, 0x44'u8, 0xc4'u8, 0xde'u8, 0xe9'u8, 0xcb'u8,
  0x54'u8, 0x7b'u8, 0x94'u8, 0x32'u8, 0xa6'u8, 0xc2'u8, 0x23'u8, 0x3d'u8, 0xee'u8, 0x4c'u8, 0x95'u8, 0x0b'u8, 0x42'u8, 0xfa'u8, 0xc3'u8, 0x4e'u8,
  0x08'u8, 0x2e'u8, 0xa1'u8, 0x66'u8, 0x28'u8, 0xd9'u8, 0x24'u8, 0xb2'u8, 0x76'u8, 0x5b'u8, 0xa2'u8, 0x49'u8, 0x6d'u8, 0x8b'u8, 0xd1'u8, 0x25'u8,
  0x72'u8, 0xf8'u8, 0xf6'u8, 0x64'u8, 0x86'u8, 0x68'u8, 0x98'u8, 0x16'u8, 0xd4'u8, 0xa4'u8, 0x5c'u8, 0xcc'u8, 0x5d'u8, 0x65'u8, 0xb6'u8, 0x92'u8,
  0x6c'u8, 0x70'u8, 0x48'u8, 0x50'u8, 0xfd'u8, 0xed'u8, 0xb9'u8, 0xda'u8, 0x5e'u8, 0x15'u8, 0x46'u8, 0x57'u8, 0xa7'u8, 0x8d'u8, 0x9d'u8, 0x84'u8,
  0x90'u8, 0xd8'u8, 0xab'u8, 0x00'u8, 0x8c'u8, 0xbc'u8, 0xd3'u8, 0x0a'u8, 0xf7'u8, 0xe4'u8, 0x58'u8, 0x05'u8, 0xb8'u8, 0xb3'u8, 0x45'u8, 0x06'u8,
  0xd0'u8, 0x2c'u8, 0x1e'u8, 0x8f'u8, 0xca'u8, 0x3f'u8, 0x0f'u8, 0x02'u8, 0xc1'u8, 0xaf'u8, 0xbd'u8, 0x03'u8, 0x01'u8, 0x13'u8, 0x8a'u8, 0x6b'u8,
  0x3a'u8, 0x91'u8, 0x11'u8, 0x41'u8, 0x4f'u8, 0x67'u8, 0xdc'u8, 0xea'u8, 0x97'u8, 0xf2'u8, 0xcf'u8, 0xcE'u8, 0xf0'u8, 0xb4'u8, 0xe6'u8, 0x73'u8,
  0x96'u8, 0xac'u8, 0x74'u8, 0x22'u8, 0xe7'u8, 0xad'u8, 0x35'u8, 0x85'u8, 0xe2'u8, 0xf9'u8, 0x37'u8, 0xe8'u8, 0x1c'u8, 0x75'u8, 0xdf'u8, 0x6e'u8,
  0x47'u8, 0xf1'u8, 0x1a'u8, 0x71'u8, 0x1d'u8, 0x29'u8, 0xc5'u8, 0x89'u8, 0x6f'u8, 0xb7'u8, 0x62'u8, 0x0e'u8, 0xaa'u8, 0x18'u8, 0xbe'u8, 0x1b'u8,
  0xfc'u8, 0x56'u8, 0x3e'u8, 0x4b'u8, 0xc6'u8, 0xd2'u8, 0x79'u8, 0x20'u8, 0x9a'u8, 0xdb'u8, 0xc0'u8, 0xfe'u8, 0x78'u8, 0xcd'u8, 0x5a'u8, 0xf4'u8,
  0x1f'u8, 0xdd'u8, 0xa8'u8, 0x33'u8, 0x88'u8, 0x07'u8, 0xc7'u8, 0x31'u8, 0xb1'u8, 0x12'u8, 0x10'u8, 0x59'u8, 0x27'u8, 0x80'u8, 0xec'u8, 0x5f'u8,
  0x60'u8, 0x51'u8, 0x7f'u8, 0xa9'u8, 0x19'u8, 0xb5'u8, 0x4a'u8, 0x0d'u8, 0x2d'u8, 0xe5'u8, 0x7a'u8, 0x9f'u8, 0x93'u8, 0xc9'u8, 0x9c'u8, 0xef'u8,
  0xa0'u8, 0xe0'u8, 0x3b'u8, 0x4d'u8, 0xae'u8, 0x2a'u8, 0xf5'u8, 0xb0'u8, 0xc8'u8, 0xeb'u8, 0xbb'u8, 0x3c'u8, 0x83'u8, 0x53'u8, 0x99'u8, 0x61'u8,
  0x17'u8, 0x2b'u8, 0x04'u8, 0x7e'u8, 0xba'u8, 0x77'u8, 0xd6'u8, 0x26'u8, 0xe1'u8, 0x69'u8, 0x14'u8, 0x63'u8, 0x55'u8, 0x21'u8, 0x0c'u8, 0x7d'u8 ]

const multiplication_9: array[256, uint8] = [
  0x00'u8, 0x09'u8, 0x12'u8, 0x1b'u8, 0x24'u8, 0x2d'u8, 0x36'u8, 0x3f'u8, 0x48'u8, 0x41'u8, 0x5a'u8, 0x53'u8, 0x6c'u8, 0x65'u8, 0x7e'u8, 0x77'u8, 
  0x90'u8, 0x99'u8, 0x82'u8, 0x8b'u8, 0xb4'u8, 0xbd'u8, 0xa6'u8, 0xaf'u8, 0xd8'u8, 0xd1'u8, 0xca'u8, 0xc3'u8, 0xfc'u8, 0xf5'u8, 0xee'u8, 0xe7'u8,
  0x3b'u8, 0x32'u8, 0x29'u8, 0x20'u8, 0x1f'u8, 0x16'u8, 0x0d'u8, 0x04'u8, 0x73'u8, 0x7a'u8, 0x61'u8, 0x68'u8, 0x57'u8, 0x5e'u8, 0x45'u8, 0x4c'u8,
  0xab'u8, 0xa2'u8, 0xb9'u8, 0xb0'u8, 0x8f'u8, 0x86'u8, 0x9d'u8, 0x94'u8, 0xe3'u8, 0xea'u8, 0xf1'u8, 0xf8'u8, 0xc7'u8, 0xce'u8, 0xd5'u8, 0xdc'u8,
  0x76'u8, 0x7f'u8, 0x64'u8, 0x6d'u8, 0x52'u8, 0x5b'u8, 0x40'u8, 0x49'u8, 0x3e'u8, 0x37'u8, 0x2c'u8, 0x25'u8, 0x1a'u8, 0x13'u8, 0x08'u8, 0x01'u8,
  0xe6'u8, 0xef'u8, 0xf4'u8, 0xfd'u8, 0xc2'u8, 0xcb'u8, 0xd0'u8, 0xd9'u8, 0xae'u8, 0xa7'u8, 0xbc'u8, 0xb5'u8, 0x8a'u8, 0x83'u8, 0x98'u8, 0x91'u8,
  0x4d'u8, 0x44'u8, 0x5f'u8, 0x56'u8, 0x69'u8, 0x60'u8, 0x7b'u8, 0x72'u8, 0x05'u8, 0x0c'u8, 0x17'u8, 0x1e'u8, 0x21'u8, 0x28'u8, 0x33'u8, 0x3a'u8,
  0xdd'u8, 0xd4'u8, 0xcf'u8, 0xc6'u8, 0xf9'u8, 0xf0'u8, 0xeb'u8, 0xe2'u8, 0x95'u8, 0x9c'u8, 0x87'u8, 0x8e'u8, 0xb1'u8, 0xb8'u8, 0xa3'u8, 0xaa'u8,
  0xec'u8, 0xe5'u8, 0xfe'u8, 0xf7'u8, 0xc8'u8, 0xc1'u8, 0xda'u8, 0xd3'u8, 0xa4'u8, 0xad'u8, 0xb6'u8, 0xbf'u8, 0x80'u8, 0x89'u8, 0x92'u8, 0x9b'u8,
  0x7c'u8, 0x75'u8, 0x6e'u8, 0x67'u8, 0x58'u8, 0x51'u8, 0x4a'u8, 0x43'u8, 0x34'u8, 0x3d'u8, 0x26'u8, 0x2f'u8, 0x10'u8, 0x19'u8, 0x02'u8, 0x0b'u8,
  0xd7'u8, 0xde'u8, 0xc5'u8, 0xcc'u8, 0xf3'u8, 0xfa'u8, 0xe1'u8, 0xe8'u8, 0x9f'u8, 0x96'u8, 0x8d'u8, 0x84'u8, 0xbb'u8, 0xb2'u8, 0xa9'u8, 0xa0'u8,
  0x47'u8, 0x4e'u8, 0x55'u8, 0x5c'u8, 0x63'u8, 0x6a'u8, 0x71'u8, 0x78'u8, 0x0f'u8, 0x06'u8, 0x1d'u8, 0x14'u8, 0x2b'u8, 0x22'u8, 0x39'u8, 0x30'u8,
  0x9a'u8, 0x93'u8, 0x88'u8, 0x81'u8, 0xbe'u8, 0xb7'u8, 0xac'u8, 0xa5'u8, 0xd2'u8, 0xdb'u8, 0xc0'u8, 0xc9'u8, 0xf6'u8, 0xff'u8, 0xe4'u8, 0xed'u8,
  0x0a'u8, 0x03'u8, 0x18'u8, 0x11'u8, 0x2e'u8, 0x27'u8, 0x3c'u8, 0x35'u8, 0x42'u8, 0x4b'u8, 0x50'u8, 0x59'u8, 0x66'u8, 0x6f'u8, 0x74'u8, 0x7d'u8,
  0xa1'u8, 0xa8'u8, 0xb3'u8, 0xba'u8, 0x85'u8, 0x8c'u8, 0x97'u8, 0x9e'u8, 0xe9'u8, 0xe0'u8, 0xfb'u8, 0xf2'u8, 0xcd'u8, 0xc4'u8, 0xdf'u8, 0xd6'u8,
  0x31'u8, 0x38'u8, 0x23'u8, 0x2a'u8, 0x15'u8, 0x1c'u8, 0x07'u8, 0x0e'u8, 0x79'u8, 0x70'u8, 0x6b'u8, 0x62'u8, 0x5d'u8, 0x54'u8, 0x4f'u8, 0x46'u8 ]

const multiplication_11: array[256, uint8] = [
  0x00'u8, 0x0b'u8, 0x16'u8, 0x1d'u8, 0x2c'u8, 0x27'u8, 0x3a'u8, 0x31'u8, 0x58'u8, 0x53'u8, 0x4e'u8, 0x45'u8, 0x74'u8, 0x7f'u8, 0x62'u8, 0x69'u8, 
  0xb0'u8, 0xbb'u8, 0xa6'u8, 0xad'u8, 0x9c'u8, 0x97'u8, 0x8a'u8, 0x81'u8, 0xe8'u8, 0xe3'u8, 0xfe'u8, 0xf5'u8, 0xc4'u8, 0xcf'u8, 0xd2'u8, 0xd9'u8,
  0x7b'u8, 0x70'u8, 0x6d'u8, 0x66'u8, 0x57'u8, 0x5c'u8, 0x41'u8, 0x4a'u8, 0x23'u8, 0x28'u8, 0x35'u8, 0x3e'u8, 0x0f'u8, 0x04'u8, 0x19'u8, 0x12'u8,
  0xcb'u8, 0xc0'u8, 0xdd'u8, 0xd6'u8, 0xe7'u8, 0xec'u8, 0xf1'u8, 0xfa'u8, 0x93'u8, 0x98'u8, 0x85'u8, 0x8e'u8, 0xbf'u8, 0xb4'u8, 0xa9'u8, 0xa2'u8,
  0xf6'u8, 0xfd'u8, 0xe0'u8, 0xeb'u8, 0xda'u8, 0xd1'u8, 0xcc'u8, 0xc7'u8, 0xae'u8, 0xa5'u8, 0xb8'u8, 0xb3'u8, 0x82'u8, 0x89'u8, 0x94'u8, 0x9f'u8,
  0x46'u8, 0x4d'u8, 0x50'u8, 0x5b'u8, 0x6a'u8, 0x61'u8, 0x7c'u8, 0x77'u8, 0x1e'u8, 0x15'u8, 0x08'u8, 0x03'u8, 0x32'u8, 0x39'u8, 0x24'u8, 0x2f'u8,
  0x8d'u8, 0x86'u8, 0x9b'u8, 0x90'u8, 0xa1'u8, 0xaa'u8, 0xb7'u8, 0xbc'u8, 0xd5'u8, 0xde'u8, 0xc3'u8, 0xc8'u8, 0xf9'u8, 0xf2'u8, 0xef'u8, 0xe4'u8,
  0x3d'u8, 0x36'u8, 0x2b'u8, 0x20'u8, 0x11'u8, 0x1a'u8, 0x07'u8, 0x0c'u8, 0x65'u8, 0x6e'u8, 0x73'u8, 0x78'u8, 0x49'u8, 0x42'u8, 0x5f'u8, 0x54'u8,
  0xf7'u8, 0xfc'u8, 0xe1'u8, 0xea'u8, 0xdb'u8, 0xd0'u8, 0xcd'u8, 0xc6'u8, 0xaf'u8, 0xa4'u8, 0xb9'u8, 0xb2'u8, 0x83'u8, 0x88'u8, 0x95'u8, 0x9e'u8,
  0x47'u8, 0x4c'u8, 0x51'u8, 0x5a'u8, 0x6b'u8, 0x60'u8, 0x7d'u8, 0x76'u8, 0x1f'u8, 0x14'u8, 0x09'u8, 0x02'u8, 0x33'u8, 0x38'u8, 0x25'u8, 0x2e'u8,
  0x8c'u8, 0x87'u8, 0x9a'u8, 0x91'u8, 0xa0'u8, 0xab'u8, 0xb6'u8, 0xbd'u8, 0xd4'u8, 0xdf'u8, 0xc2'u8, 0xc9'u8, 0xf8'u8, 0xf3'u8, 0xee'u8, 0xe5'u8,
  0x3c'u8, 0x37'u8, 0x2a'u8, 0x21'u8, 0x10'u8, 0x1b'u8, 0x06'u8, 0x0d'u8, 0x64'u8, 0x6f'u8, 0x72'u8, 0x79'u8, 0x48'u8, 0x43'u8, 0x5e'u8, 0x55'u8,
  0x01'u8, 0x0a'u8, 0x17'u8, 0x1c'u8, 0x2d'u8, 0x26'u8, 0x3b'u8, 0x30'u8, 0x59'u8, 0x52'u8, 0x4f'u8, 0x44'u8, 0x75'u8, 0x7e'u8, 0x63'u8, 0x68'u8,
  0xb1'u8, 0xba'u8, 0xa7'u8, 0xac'u8, 0x9d'u8, 0x96'u8, 0x8b'u8, 0x80'u8, 0xe9'u8, 0xe2'u8, 0xff'u8, 0xf4'u8, 0xc5'u8, 0xce'u8, 0xd3'u8, 0xd8'u8,
  0x7a'u8, 0x71'u8, 0x6c'u8, 0x67'u8, 0x56'u8, 0x5d'u8, 0x40'u8, 0x4b'u8, 0x22'u8, 0x29'u8, 0x34'u8, 0x3f'u8, 0x0e'u8, 0x05'u8, 0x18'u8, 0x13'u8,
  0xca'u8, 0xc1'u8, 0xdc'u8, 0xd7'u8, 0xe6'u8, 0xed'u8, 0xf0'u8, 0xfb'u8, 0x92'u8, 0x99'u8, 0x84'u8, 0x8f'u8, 0xbe'u8, 0xb5'u8, 0xa8'u8, 0xa3'u8 ]

const multiplication_13: array[256, uint8] = [
  0x00'u8, 0x0d'u8, 0x1a'u8, 0x17'u8, 0x34'u8, 0x39'u8, 0x2e'u8, 0x23'u8, 0x68'u8, 0x65'u8, 0x72'u8, 0x7f'u8, 0x5c'u8, 0x51'u8, 0x46'u8, 0x4b'u8, 
  0xd0'u8, 0xdd'u8, 0xca'u8, 0xc7'u8, 0xe4'u8, 0xe9'u8, 0xfe'u8, 0xf3'u8, 0xb8'u8, 0xb5'u8, 0xa2'u8, 0xaf'u8, 0x8c'u8, 0x81'u8, 0x96'u8, 0x9b'u8,
  0xbb'u8, 0xb6'u8, 0xa1'u8, 0xac'u8, 0x8f'u8, 0x82'u8, 0x95'u8, 0x98'u8, 0xd3'u8, 0xde'u8, 0xc9'u8, 0xc4'u8, 0xe7'u8, 0xea'u8, 0xfd'u8, 0xf0'u8,
  0x6b'u8, 0x66'u8, 0x71'u8, 0x7c'u8, 0x5f'u8, 0x52'u8, 0x45'u8, 0x48'u8, 0x03'u8, 0x0e'u8, 0x19'u8, 0x14'u8, 0x37'u8, 0x3a'u8, 0x2d'u8, 0x20'u8,
  0x6d'u8, 0x60'u8, 0x77'u8, 0x7a'u8, 0x59'u8, 0x54'u8, 0x43'u8, 0x4e'u8, 0x05'u8, 0x08'u8, 0x1f'u8, 0x12'u8, 0x31'u8, 0x3c'u8, 0x2b'u8, 0x26'u8,
  0xbd'u8, 0xb0'u8, 0xa7'u8, 0xaa'u8, 0x89'u8, 0x84'u8, 0x93'u8, 0x9e'u8, 0xd5'u8, 0xd8'u8, 0xcf'u8, 0xc2'u8, 0xe1'u8, 0xec'u8, 0xfb'u8, 0xf6'u8,
  0xd6'u8, 0xdb'u8, 0xcc'u8, 0xc1'u8, 0xe2'u8, 0xef'u8, 0xf8'u8, 0xf5'u8, 0xbe'u8, 0xb3'u8, 0xa4'u8, 0xa9'u8, 0x8a'u8, 0x87'u8, 0x90'u8, 0x9d'u8,
  0x06'u8, 0x0b'u8, 0x1c'u8, 0x11'u8, 0x32'u8, 0x3f'u8, 0x28'u8, 0x25'u8, 0x6e'u8, 0x63'u8, 0x74'u8, 0x79'u8, 0x5a'u8, 0x57'u8, 0x40'u8, 0x4d'u8,
  0xda'u8, 0xd7'u8, 0xc0'u8, 0xcd'u8, 0xee'u8, 0xe3'u8, 0xf4'u8, 0xf9'u8, 0xb2'u8, 0xbf'u8, 0xa8'u8, 0xa5'u8, 0x86'u8, 0x8b'u8, 0x9c'u8, 0x91'u8,
  0x0a'u8, 0x07'u8, 0x10'u8, 0x1d'u8, 0x3e'u8, 0x33'u8, 0x24'u8, 0x29'u8, 0x62'u8, 0x6f'u8, 0x78'u8, 0x75'u8, 0x56'u8, 0x5b'u8, 0x4c'u8, 0x41'u8,
  0x61'u8, 0x6c'u8, 0x7b'u8, 0x76'u8, 0x55'u8, 0x58'u8, 0x4f'u8, 0x42'u8, 0x09'u8, 0x04'u8, 0x13'u8, 0x1e'u8, 0x3d'u8, 0x30'u8, 0x27'u8, 0x2a'u8,
  0xb1'u8, 0xbc'u8, 0xab'u8, 0xa6'u8, 0x85'u8, 0x88'u8, 0x9f'u8, 0x92'u8, 0xd9'u8, 0xd4'u8, 0xc3'u8, 0xce'u8, 0xed'u8, 0xe0'u8, 0xf7'u8, 0xfa'u8,
  0xb7'u8, 0xba'u8, 0xad'u8, 0xa0'u8, 0x83'u8, 0x8e'u8, 0x99'u8, 0x94'u8, 0xdf'u8, 0xd2'u8, 0xc5'u8, 0xc8'u8, 0xeb'u8, 0xe6'u8, 0xf1'u8, 0xfc'u8,
  0x67'u8, 0x6a'u8, 0x7d'u8, 0x70'u8, 0x53'u8, 0x5e'u8, 0x49'u8, 0x44'u8, 0x0f'u8, 0x02'u8, 0x15'u8, 0x18'u8, 0x3b'u8, 0x36'u8, 0x21'u8, 0x2c'u8,
  0x0c'u8, 0x01'u8, 0x16'u8, 0x1b'u8, 0x38'u8, 0x35'u8, 0x22'u8, 0x2f'u8, 0x64'u8, 0x69'u8, 0x7e'u8, 0x73'u8, 0x50'u8, 0x5d'u8, 0x4a'u8, 0x47'u8,
  0xdc'u8, 0xd1'u8, 0xc6'u8, 0xcb'u8, 0xe8'u8, 0xe5'u8, 0xf2'u8, 0xff'u8, 0xb4'u8, 0xb9'u8, 0xae'u8, 0xa3'u8, 0x80'u8, 0x8d'u8, 0x9a'u8, 0x97'u8 ]

const multiplication_14: array[256, uint8] = [
  0x00'u8, 0x0e'u8, 0x1c'u8, 0x12'u8, 0x38'u8, 0x36'u8, 0x24'u8, 0x2a'u8, 0x70'u8, 0x7e'u8, 0x6c'u8, 0x62'u8, 0x48'u8, 0x46'u8, 0x54'u8, 0x5a'u8,
  0xe0'u8, 0xee'u8, 0xfc'u8, 0xf2'u8, 0xd8'u8, 0xd6'u8, 0xc4'u8, 0xca'u8, 0x90'u8, 0x9e'u8, 0x8c'u8, 0x82'u8, 0xa8'u8, 0xa6'u8, 0xb4'u8, 0xba'u8,
  0xdb'u8, 0xd5'u8, 0xc7'u8, 0xc9'u8, 0xe3'u8, 0xed'u8, 0xff'u8, 0xf1'u8, 0xab'u8, 0xa5'u8, 0xb7'u8, 0xb9'u8, 0x93'u8, 0x9d'u8, 0x8f'u8, 0x81'u8,
  0x3b'u8, 0x35'u8, 0x27'u8, 0x29'u8, 0x03'u8, 0x0d'u8, 0x1f'u8, 0x11'u8, 0x4b'u8, 0x45'u8, 0x57'u8, 0x59'u8, 0x73'u8, 0x7d'u8, 0x6f'u8, 0x61'u8,
  0xad'u8, 0xa3'u8, 0xb1'u8, 0xbf'u8, 0x95'u8, 0x9b'u8, 0x89'u8, 0x87'u8, 0xdd'u8, 0xd3'u8, 0xc1'u8, 0xcf'u8, 0xe5'u8, 0xeb'u8, 0xf9'u8, 0xf7'u8,
  0x4d'u8, 0x43'u8, 0x51'u8, 0x5f'u8, 0x75'u8, 0x7b'u8, 0x69'u8, 0x67'u8, 0x3d'u8, 0x33'u8, 0x21'u8, 0x2f'u8, 0x05'u8, 0x0b'u8, 0x19'u8, 0x17'u8,
  0x76'u8, 0x78'u8, 0x6a'u8, 0x64'u8, 0x4e'u8, 0x40'u8, 0x52'u8, 0x5c'u8, 0x06'u8, 0x08'u8, 0x1a'u8, 0x14'u8, 0x3e'u8, 0x30'u8, 0x22'u8, 0x2c'u8,
  0x96'u8, 0x98'u8, 0x8a'u8, 0x84'u8, 0xae'u8, 0xa0'u8, 0xb2'u8, 0xbc'u8, 0xe6'u8, 0xe8'u8, 0xfa'u8, 0xf4'u8, 0xde'u8, 0xd0'u8, 0xc2'u8, 0xcc'u8,
  0x41'u8, 0x4f'u8, 0x5d'u8, 0x53'u8, 0x79'u8, 0x77'u8, 0x65'u8, 0x6b'u8, 0x31'u8, 0x3f'u8, 0x2d'u8, 0x23'u8, 0x09'u8, 0x07'u8, 0x15'u8, 0x1b'u8,
  0xa1'u8, 0xaf'u8, 0xbd'u8, 0xb3'u8, 0x99'u8, 0x97'u8, 0x85'u8, 0x8b'u8, 0xd1'u8, 0xdf'u8, 0xcd'u8, 0xc3'u8, 0xe9'u8, 0xe7'u8, 0xf5'u8, 0xfb'u8,
  0x9a'u8, 0x94'u8, 0x86'u8, 0x88'u8, 0xa2'u8, 0xac'u8, 0xbe'u8, 0xb0'u8, 0xea'u8, 0xe4'u8, 0xf6'u8, 0xf8'u8, 0xd2'u8, 0xdc'u8, 0xce'u8, 0xc0'u8,
  0x7a'u8, 0x74'u8, 0x66'u8, 0x68'u8, 0x42'u8, 0x4c'u8, 0x5e'u8, 0x50'u8, 0x0a'u8, 0x04'u8, 0x16'u8, 0x18'u8, 0x32'u8, 0x3c'u8, 0x2e'u8, 0x20'u8,
  0xec'u8, 0xe2'u8, 0xf0'u8, 0xfe'u8, 0xd4'u8, 0xda'u8, 0xc8'u8, 0xc6'u8, 0x9c'u8, 0x92'u8, 0x80'u8, 0x8e'u8, 0xa4'u8, 0xaa'u8, 0xb8'u8, 0xb6'u8,
  0x0c'u8, 0x02'u8, 0x10'u8, 0x1e'u8, 0x34'u8, 0x3a'u8, 0x28'u8, 0x26'u8, 0x7c'u8, 0x72'u8, 0x60'u8, 0x6e'u8, 0x44'u8, 0x4a'u8, 0x58'u8, 0x56'u8,
  0x37'u8, 0x39'u8, 0x2b'u8, 0x25'u8, 0x0f'u8, 0x01'u8, 0x13'u8, 0x1d'u8, 0x47'u8, 0x49'u8, 0x5b'u8, 0x55'u8, 0x7f'u8, 0x71'u8, 0x63'u8, 0x6d'u8,
  0xd7'u8, 0xd9'u8, 0xcb'u8, 0xc5'u8, 0xef'u8, 0xe1'u8, 0xf3'u8, 0xfd'u8, 0xa7'u8, 0xa9'u8, 0xbb'u8, 0xb5'u8, 0x9f'u8, 0x91'u8, 0x83'u8, 0x8d'u8 ]

const rcon: array[10, byte] = [ 0x01'u8, 0x02'u8, 0x04'u8, 0x08'u8, 0x10'u8, 0x20'u8, 0x40'u8, 0x80'u8, 0x1B'u8, 0x36'u8 ]

const N = 16
const rounds = 9

type Block = array[N, uint8]

proc decrypt*(data, key: Block): Block =
  var
    round_keys: array[rounds + 1, Block]
    round_key = key
    tmp0, tmp1, tmp2, tmp3: uint8

  for i in 0..rounds:
    round_keys[i][0] = save_box[round_key[13]] xor rcon[i] xor round_key[0]
    round_keys[i][1] = save_box[round_key[14]] xor round_key[1]
    round_keys[i][2] = save_box[round_key[15]] xor round_key[2]
    round_keys[i][3] = save_box[round_key[12]] xor round_key[3]

    round_keys[i][4] = round_keys[i][0] xor round_key[4]
    round_keys[i][5] = round_keys[i][1] xor round_key[5]
    round_keys[i][6] = round_keys[i][2] xor round_key[6]
    round_keys[i][7] = round_keys[i][3] xor round_key[7]

    round_keys[i][8] = round_keys[i][4] xor round_key[8]
    round_keys[i][9] = round_keys[i][5] xor round_key[9]
    round_keys[i][10] = round_keys[i][6] xor round_key[10]
    round_keys[i][11] = round_keys[i][7] xor round_key[11]

    round_keys[i][12] = round_keys[i][8] xor round_key[12]
    round_keys[i][13] = round_keys[i][9] xor round_key[13]
    round_keys[i][14] = round_keys[i][10] xor round_key[14]
    round_keys[i][15] = round_keys[i][11] xor round_key[15]

    round_key = round_keys[i]

  result[0] = inv_save_box[data[0] xor round_keys[rounds][0]]
  result[4] = inv_save_box[data[4] xor round_keys[rounds][4]]
  result[8] = inv_save_box[data[8] xor round_keys[rounds][8]]
  result[12] = inv_save_box[data[12] xor round_keys[rounds][12]]

  tmp0 = inv_save_box[data[1] xor round_keys[rounds][1]]
  result[1] = inv_save_box[data[13] xor round_keys[rounds][13]]
  result[13] = inv_save_box[data[9] xor round_keys[rounds][9]]
  result[9] = inv_save_box[data[5] xor round_keys[rounds][5]]
  result[5] = tmp0

  tmp0 = inv_save_box[data[2] xor round_keys[rounds][2]]
  result[2] = inv_save_box[data[10] xor round_keys[rounds][10]]
  result[10] = tmp0

  tmp0 = inv_save_box[data[3] xor round_keys[rounds][3]]
  result[3] = inv_save_box[data[7] xor round_keys[rounds][7]]
  result[7] = inv_save_box[data[11] xor round_keys[rounds][11]]
  result[11] = inv_save_box[data[15] xor round_keys[rounds][15]]
  result[15] = tmp0

  tmp0 = inv_save_box[data[6] xor round_keys[rounds][6]]
  result[6] = inv_save_box[data[14] xor round_keys[rounds][14]]
  result[14] = tmp0

  for i1 in countdown(rounds - 1, 0):
    for i in countup(0, 12, 4):
      tmp0 = result[i] xor round_keys[i1][i]
      tmp1 = result[i + 1] xor round_keys[i1][i + 1]
      tmp2 = result[i + 2] xor round_keys[i1][i + 2]
      tmp3 = result[i + 3] xor round_keys[i1][i + 3]

      result[i] = inv_save_box[multiplication_14[tmp0] xor multiplication_11[tmp1] xor multiplication_13[tmp2] xor multiplication_9[tmp3]]
      result[i + 1] = inv_save_box[multiplication_9[tmp0] xor multiplication_14[tmp1] xor multiplication_11[tmp2] xor multiplication_13[tmp3]]
      result[i + 2] = inv_save_box[multiplication_13[tmp0] xor multiplication_9[tmp1] xor multiplication_14[tmp2] xor multiplication_11[tmp3]]
      result[i + 3] = inv_save_box[multiplication_11[tmp0] xor multiplication_13[tmp1] xor multiplication_9[tmp2] xor multiplication_14[tmp3]]

    tmp0 = result[1]
    result[1] = result[13]
    result[13] = result[9]
    result[9] = result[5]
    result[5] = tmp0

    tmp0 = result[2]
    result[2] = result[10]
    result[10] = tmp0

    tmp0 = result[3]
    result[3] = result[7]
    result[7] = result[11]
    result[11] = result[15]
    result[15] = tmp0

    tmp0 = result[6]
    result[6] = result[14]
    result[14] = tmp0

  for i in 0..<N:
    result[i] = result[i] xor key[i]